-- MySQL Script generated by MySQL Workbench
-- Wed Mar  1 13:18:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`isPremium`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`isPremium` (
  `_id` INT NOT NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users` (
  `_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `gender` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `zip_code` INT NULL,
  `birth_date` DATE NULL,
  `isPremium_id` INT NOT NULL,
  PRIMARY KEY (`_id`),
  INDEX `fk_Users_isPremium1_idx` (`isPremium_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_isPremium1`
    FOREIGN KEY (`isPremium_id`)
    REFERENCES `mydb`.`isPremium` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Payments_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Payments_detail` (
  `_id` INT NOT NULL,
  `method` VARCHAR(45) NULL,
  `card_num` INT NULL,
  `expire_date` VARCHAR(45) NULL,
  `cvv` INT NULL,
  `paypal_id` VARCHAR(45) NULL,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Payments` (
  `_id` INT NOT NULL,
  `timeStamp` TIMESTAMP NULL,
  `total_payment` INT NULL,
  `isPremium_id` INT NOT NULL,
  `Payments_detail_id` INT NOT NULL,
  PRIMARY KEY (`_id`, `isPremium_id`, `Payments_detail_id`),
  INDEX `fk_Payments_isPremium1_idx` (`isPremium_id` ASC) VISIBLE,
  INDEX `fk_Payments_Payments_detail1_idx` (`Payments_detail_id` ASC) VISIBLE,
  CONSTRAINT `fk_Payments_isPremium1`
    FOREIGN KEY (`isPremium_id`)
    REFERENCES `mydb`.`isPremium` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payments_Payments_detail1`
    FOREIGN KEY (`Payments_detail_id`)
    REFERENCES `mydb`.`Payments_detail` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Artists` (
  `_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `image_url` VARCHAR(45) NULL,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Genres` (
  `_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `Artists_id` INT NOT NULL,
  PRIMARY KEY (`_id`, `Artists_id`),
  INDEX `fk_Genres_Artists1_idx` (`Artists_id` ASC) VISIBLE,
  CONSTRAINT `fk_Genres_Artists1`
    FOREIGN KEY (`Artists_id`)
    REFERENCES `mydb`.`Artists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Albums` (
  `_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `cover_url` VARCHAR(45) NULL,
  `date_realase` DATE NULL,
  `Artists_id` INT NOT NULL,
  PRIMARY KEY (`_id`, `Artists_id`),
  INDEX `fk_Albums_Artists1_idx` (`Artists_id` ASC) VISIBLE,
  CONSTRAINT `fk_Albums_Artists1`
    FOREIGN KEY (`Artists_id`)
    REFERENCES `mydb`.`Artists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Users_has_Albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users_has_Albums` (
  `Users_id` INT NOT NULL,
  `Albums_id` INT NOT NULL,
  PRIMARY KEY (`Users_id`, `Albums_id`),
  INDEX `fk_Users_has_Albums_Albums1_idx` (`Albums_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Albums_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Albums_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `mydb`.`Users` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Albums_Albums1`
    FOREIGN KEY (`Albums_id`)
    REFERENCES `mydb`.`Albums` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Users_has_Artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users_has_Artists` (
  `Users_id` INT NOT NULL,
  `Artists_id` INT NOT NULL,
  PRIMARY KEY (`Users_id`, `Artists_id`),
  INDEX `fk_Users_has_Artists_Artists1_idx` (`Artists_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Artists_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Artists_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `mydb`.`Users` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Artists_Artists1`
    FOREIGN KEY (`Artists_id`)
    REFERENCES `mydb`.`Artists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Playlists` (
  `_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `song_num` INT NULL,
  `timeStamp` TIMESTAMP NULL,
  `isActive` TINYINT NULL,
  `isShared` TINYINT NULL,
  `delete_date` DATE NULL,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Songs` (
  `_id` INT NOT NULL,
  `Artists_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `lenght` INT NULL,
  `play_num` INT NULL,
  PRIMARY KEY (`_id`, `Artists_id`),
  INDEX `fk_Songs_Artists1_idx` (`Artists_id` ASC) VISIBLE,
  CONSTRAINT `fk_Songs_Artists1`
    FOREIGN KEY (`Artists_id`)
    REFERENCES `mydb`.`Artists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Playlists_has_Songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Playlists_has_Songs` (
  `Playlists_id` INT NOT NULL,
  `Songs_id` INT NOT NULL,
  PRIMARY KEY (`Playlists_id`, `Songs_id`),
  INDEX `fk_Playlists_has_Songs_Songs1_idx` (`Songs_id` ASC) VISIBLE,
  INDEX `fk_Playlists_has_Songs_Playlists1_idx` (`Playlists_id` ASC) VISIBLE,
  CONSTRAINT `fk_Playlists_has_Songs_Playlists1`
    FOREIGN KEY (`Playlists_id`)
    REFERENCES `mydb`.`Playlists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlists_has_Songs_Songs1`
    FOREIGN KEY (`Songs_id`)
    REFERENCES `mydb`.`Songs` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Users_has_Playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users_has_Playlists` (
  `Playlists_id` INT NOT NULL,
  `Users_id` INT NOT NULL,
  PRIMARY KEY (`Playlists_id`, `Users_id`),
  INDEX `fk_Playlists_has_Users_Users1_idx` (`Users_id` ASC) VISIBLE,
  INDEX `fk_Playlists_has_Users_Playlists1_idx` (`Playlists_id` ASC) VISIBLE,
  CONSTRAINT `fk_Playlists_has_Users_Playlists1`
    FOREIGN KEY (`Playlists_id`)
    REFERENCES `mydb`.`Playlists` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlists_has_Users_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `mydb`.`Users` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Users_has_Songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users_has_Songs` (
  `Songs_id` INT NOT NULL,
  `Users_id` INT NOT NULL,
  PRIMARY KEY (`Songs_id`, `Users_id`),
  INDEX `fk_Songs_has_Users_Users1_idx` (`Users_id` ASC) VISIBLE,
  INDEX `fk_Songs_has_Users_Songs1_idx` (`Songs_id` ASC) VISIBLE,
  CONSTRAINT `fk_Songs_has_Users_Songs1`
    FOREIGN KEY (`Songs_id`)
    REFERENCES `mydb`.`Songs` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Songs_has_Users_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `mydb`.`Users` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
